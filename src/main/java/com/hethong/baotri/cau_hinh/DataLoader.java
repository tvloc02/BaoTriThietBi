package com.hethong.baotri.cau_hinh;

import com.hethong.baotri.kho_du_lieu.nguoi_dung.NguoiDungRepository;
import com.hethong.baotri.kho_du_lieu.nguoi_dung.VaiTroRepository;
import com.hethong.baotri.thuc_the.nguoi_dung.NguoiDung;
import com.hethong.baotri.thuc_the.nguoi_dung.VaiTro;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.boot.CommandLineRunner;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

import java.util.Optional;

@Component
@RequiredArgsConstructor
@Slf4j
public class DataLoader implements CommandLineRunner {

    private final PasswordEncoder passwordEncoder;
    private final NguoiDungRepository nguoiDungRepository;
    private final VaiTroRepository vaiTroRepository;

    @Override
    public void run(String... args) throws Exception {
        try {
            taoVaiTroMacDinh();
            taoNguoiDungMacDinh();
            log.info("‚úÖ Kh·ªüi t·∫°o d·ªØ li·ªáu m·∫∑c ƒë·ªãnh th√†nh c√¥ng!");
        } catch (Exception e) {
            log.error("‚ùå L·ªói khi kh·ªüi t·∫°o d·ªØ li·ªáu m·∫∑c ƒë·ªãnh: {}", e.getMessage(), e);
        }
    }

    private void taoVaiTroMacDinh() {
        // Vai tr√≤ ƒë√£ ƒë∆∞·ª£c t·∫°o trong migration V1
        log.info("‚úÖ Vai tr√≤ ƒë√£ ƒë∆∞·ª£c t·∫°o t·ª´ migration");
    }

    private void taoNguoiDungMacDinh() {
        String defaultPassword = "123456";

        // ‚úÖ T·∫°o ƒë√∫ng c√°c user ƒë√£ ƒë·ªãnh nghƒ©a trong migration V1

        // 1. Admin
        if (!nguoiDungRepository.existsByTenDangNhap("admin")) {
            taoUser("admin", "Nguy·ªÖn VƒÉn Admin", "admin@truonghoc.edu.vn", "0901234567", defaultPassword, "QUAN_TRI_VIEN");
        }

        // 2. Hi·ªáu tr∆∞·ªüng
        if (!nguoiDungRepository.existsByTenDangNhap("hieupho.nguyen")) {
            taoUser("hieupho.nguyen", "Nguy·ªÖn VƒÉn Hi·ªáu", "hieupho@truonghoc.edu.vn", "0901234568", defaultPassword, "HIEU_TRUONG");
        }

        // 3. Tr∆∞·ªüng ph√≤ng CSVC
        if (!nguoiDungRepository.existsByTenDangNhap("phong.tran")) {
            taoUser("phong.tran", "Tr·∫ßn Th·ªã Ph√≤ng", "phongcsvc@truonghoc.edu.vn", "0901234569", defaultPassword, "TRUONG_PHONG_CSVC");
        }

        // 4-5. Nh√¢n vi√™n CSVC
        if (!nguoiDungRepository.existsByTenDangNhap("duc.le")) {
            taoUser("duc.le", "L√™ VƒÉn ƒê·ª©c", "duc.csvc@truonghoc.edu.vn", "0901234570", defaultPassword, "NHAN_VIEN_CSVC");
        }

        if (!nguoiDungRepository.existsByTenDangNhap("mai.pham")) {
            taoUser("mai.pham", "Ph·∫°m Th·ªã Mai", "mai.csvc@truonghoc.edu.vn", "0901234571", defaultPassword, "NHAN_VIEN_CSVC");
        }

        // 6-7. K·ªπ thu·∫≠t vi√™n
        if (!nguoiDungRepository.existsByTenDangNhap("thanh.vo")) {
            taoUser("thanh.vo", "V√µ Minh Th√†nh", "thanh.kt@truonghoc.edu.vn", "0901234572", defaultPassword, "KY_THUAT_VIEN");
        }

        if (!nguoiDungRepository.existsByTenDangNhap("hung.dao")) {
            taoUser("hung.dao", "ƒê√†o C√¥ng H√πng", "hung.kt@truonghoc.edu.vn", "0901234573", defaultPassword, "KY_THUAT_VIEN");
        }

        // 8-10. Gi√°o vi√™n
        if (!nguoiDungRepository.existsByTenDangNhap("linh.nguyen")) {
            taoUser("linh.nguyen", "Nguy·ªÖn Th·ªã Linh", "linh.gv@truonghoc.edu.vn", "0901234574", defaultPassword, "GIAO_VIEN");
        }

        if (!nguoiDungRepository.existsByTenDangNhap("minh.tran")) {
            taoUser("minh.tran", "Tr·∫ßn VƒÉn Minh", "minh.gv@truonghoc.edu.vn", "0901234575", defaultPassword, "GIAO_VIEN");
        }

        if (!nguoiDungRepository.existsByTenDangNhap("hoa.le")) {
            taoUser("hoa.le", "L√™ Th·ªã Hoa", "hoa.gv@truonghoc.edu.vn", "0901234576", defaultPassword, "GIAO_VIEN");
        }

        log.info("üìù ƒê√£ t·∫°o 10 user ƒë√∫ng nh∆∞ migration V1, t·∫•t c·∫£ ƒë·ªÅu c√≥ password: {}", defaultPassword);
    }

    private void taoUser(String username, String hoVaTen, String email, String soDienThoai, String password, String vaiTroName) {
        try {
            // T·∫°o user m·ªõi
            NguoiDung user = new NguoiDung();
            user.setTenDangNhap(username);
            user.setMatKhau(passwordEncoder.encode(password)); // ‚úÖ M√£ h√≥a password ƒë√∫ng c√°ch
            user.setHoVaTen(hoVaTen);
            user.setEmail(email);
            user.setSoDienThoai(soDienThoai);
            user.setTrangThaiHoatDong(true);
            user.setTaiKhoanKhongBiKhoa(true);
            user.setTaiKhoanKhongHetHan(true);
            user.setThongTinDangNhapHopLe(true);
            user.setSoLanDangNhapThatBai(0);

            // Th√™m vai tr√≤
            Optional<VaiTro> vaiTro = vaiTroRepository.findByTenVaiTro(vaiTroName);
            if (vaiTro.isPresent()) {
                user.getVaiTroSet().add(vaiTro.get());
            } else {
                log.warn("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y vai tr√≤: {}", vaiTroName);
            }

            NguoiDung saved = nguoiDungRepository.save(user);
            log.info("‚úÖ T·∫°o user th√†nh c√¥ng! Username: {} | Password: {} | Role: {}",
                    username, password, vaiTroName);

        } catch (Exception e) {
            log.error("‚ùå L·ªói t·∫°o user {}: {}", username, e.getMessage(), e);
        }
    }
}